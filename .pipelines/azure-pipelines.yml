trigger:
- release/*

pool:
  vmImage: 'windows-2022'

variables:
  solution: 'src\Blauhaus.Push.sln'
  buildPlatform: 'Any CPU'
  DotNetVersion: 7.x
  VersionName: $[replace(variables['Build.SourceBranchName'], 'refs/heads/release/', '')]
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

steps:
- powershell: Write-Host "Branch Name $(Build.SourceBranchName)"

- task: UseDotNet@2
  displayName: .NET Version
  inputs:
    packageType: 'sdk'
    version: '$(DotNetVersion)'

- task: CmdLine@2
  displayName: Install MAUI
  inputs:
    script: 'dotnet workload install maui'

- task: Bash@3
  displayName: Restore nuget
  inputs:
    targetType: 'inline'
    script: |
        dotnet restore '$(solution)' 

#- task: MSBuild@1
#  inputs:
#    solution: './src/Blauhaus.Push.Client/Blauhaus.Push.Client.csproj'
#    configuration: 'Release'
#    clean: true
#    msbuildArgs: '/p:TargetFramework=Xamarin.iOS10 /t:restore;build;pack /p:Version=$(VersionName) /p:PackageOutputPath=$(appxPackageDir)'
    
#- task: MSBuild@1
#  inputs:
#    solution: './src/Blauhaus.Push.Client/Blauhaus.Push.Client.csproj'
#    configuration: 'Release'
#    clean: true
#    msbuildArgs: '/p:TargetFramework=MonoAndroid10.0 /t:restore;build;pack /p:Version=$(VersionName) /p:PackageOutputPath=$(appxPackageDir)'
    
#- task: MSBuild@1
#  inputs:
#    solution: './src/Blauhaus.Push.Client/Blauhaus.Push.Client.csproj'
#    configuration: 'Release'
#    clean: true
#    msbuildArgs: '/p:TargetFramework=uap10.0.19041 /t:restore;build;pack /p:Version=$(VersionName) /p:PackageOutputPath=$(appxPackageDir)'

- task: Bash@3
  displayName: Build
  inputs:
    targetType: 'inline'
    script: | 
        dotnet publish ./src/Blauhaus.Push.Abstractions/Blauhaus.Push.Abstractions.csproj -f netstandard2.0 -c Release
        dotnet publish ./src/Blauhaus.Push.Abstractions/Blauhaus.Push.Abstractions.csproj -f net7.0 -c Release 
        dotnet publish ./src/Blauhaus.Push.Client/Blauhaus.Push.Client.csproj -f netstandard2.0 -c Release 
        #dotnet publish ./src/Blauhaus.Push.Client/Blauhaus.Push.Client.csproj -f Xamarin.iOS10 -c Release 
        #dotnet publish ./src/Blauhaus.Push.Client/Blauhaus.Push.Client.csproj -f MonoAndroid10.0 -c Release 
        #dotnet publish ./src/Blauhaus.Push.Client/Blauhaus.Push.Client.csproj -f uap10.0.19041 -c Release 
        dotnet publish ./src/Blauhaus.Push.Client.Maui/Blauhaus.Push.Client.Maui.csproj -f net7.0 -c Release 
        dotnet publish ./src/Blauhaus.Push.Client.Maui/Blauhaus.Push.Client.Maui.csproj -f net7.0-ios -c Release 
        dotnet publish ./src/Blauhaus.Push.Client.Maui/Blauhaus.Push.Client.Maui.csproj -f net7.0-android -c Release 
        dotnet publish ./src/Blauhaus.Push.Client.Maui/Blauhaus.Push.Client.Maui.csproj -f net7.0-windows10.0.19041 
        dotnet publish ./src/Blauhaus.Push.Server/Blauhaus.Push.Server.csproj -f net7.0 -c Release 
        dotnet publish ./src/Blauhaus.Push.TestHelpers/Blauhaus.Push.TestHelpers.csproj -f net7.0 -c Release 
 
- task: Bash@3
  displayName: Pack
  inputs:
    targetType: 'inline'
    script: | 
        dotnet pack ./src/Blauhaus.Push.Abstractions/Blauhaus.Push.Abstractions.csproj -c Release --output $(build.sourcesdirectory) -p:PackageVersion=${VERSION_NAME} --no-build
        dotnet pack ./src/Blauhaus.Push.Client/Blauhaus.Push.Client.csproj -c Release --output $(build.sourcesdirectory) -p:PackageVersion=${VERSION_NAME} --no-build
        dotnet pack ./src/Blauhaus.Push.Client.Maui/Blauhaus.Push.Client.Maui.csproj -c Release --output $(build.sourcesdirectory) -p:PackageVersion=${VERSION_NAME} --no-build
        dotnet pack ./src/Blauhaus.Push.Server/Blauhaus.Push.Server.csproj -c Release --output $(build.sourcesdirectory) -p:PackageVersion=${VERSION_NAME} --no-build
        dotnet pack ./src/Blauhaus.Push.TestHelpers/Blauhaus.Push.TestHelpers.csproj -c Release --output $(build.sourcesdirectory) -p:PackageVersion=${VERSION_NAME} --no-build
 

#- task: CopyFiles@2
#  inputs:
#    SourceFolder: '$(build.sourcesdirectory)'
#    Contents: '**\bin\$(BuildConfiguration)\**\*.nupkg'
#    TargetFolder: '$(build.artifactstagingdirectory)'

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(build.sourcesdirectory)/**/*.nupkg;!$(build.sourcesdirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'Blauhaus Nuget'

