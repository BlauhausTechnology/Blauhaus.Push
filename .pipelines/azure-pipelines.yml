trigger:
- release/*

pool:
  vmImage: 'windows-2022'

variables:
  solution: 'src\Blauhaus.Push.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

steps:
- powershell: Write-Host "Branch Name $(Build.SourceBranchName)"

- task: CmdLine@2
  displayName: Install MAUI
  inputs:
    script: 'dotnet workload install maui'

- task: Bash@3
  displayName: Restore nuget
  inputs:
    targetType: 'inline'
    script: |
        dotnet restore '$(solution)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/*.csproj'

#- task: Bash@3
#  displayName: Build
#  inputs:
#    targetType: 'inline'
#    script: | 
#        dotnet publish Blauhaus.Push.Client.Maui\Blauhaus.Push.Client.Maui.csproj -f net7.0 -c Release -o $(build.sourcesdirectory)
#        dotnet publish Blauhaus.Push.Client.Maui\Blauhaus.Push.Client.Maui.csproj -f net7.0-ios -c Release -o $(build.sourcesdirectory)
#        dotnet publish Blauhaus.Push.Client.Maui\Blauhaus.Push.Client.Maui.csproj -f net7.0-android -c Release -o $(build.sourcesdirectory)
#        dotnet publish Blauhaus.Push.Client.Maui\Blauhaus.Push.Client.Maui.csproj -f net7.0-windows10.0.19041 -c Release -o $(build.sourcesdirectory)
#        dotnet publish Blauhaus.Push.Client\Blauhaus.Push.Client.csproj -f netstandard2.0 -c Release -o $(build.sourcesdirectory)
#        dotnet publish Blauhaus.Push.Abstractions\Blauhaus.Push.Abstractions.csproj -f netstandard2.0 -c Release -o $(build.sourcesdirectory)
#        dotnet publish Blauhaus.Push.Server\Blauhaus.Push.Server.csproj -f net7.0 -c Release -o $(build.sourcesdirectory)
#        dotnet publish Blauhaus.Push.TestHelpers\Blauhaus.Push.TestHelpers.csproj -f net7.0 -c Release -o $(build.sourcesdirectory)

#- task: VSBuild@1
#  inputs:
#    platform: '$(buildPlatform)'
#    solution: '$(solution)'
#    configuration: '$(buildConfiguration)'
#    msbuildArgs: '/t:restore;build;pack /p:PackageVersion=$(Build.SourceBranchName) /p:PackageOutputPath=$(build.artifactstagingdirectory)/public  /p:AssemblyFileVersion=$(Build.SourceBranchName)'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(build.sourcesdirectory)'
    Contents: '**\bin\$(BuildConfiguration)\**\*.nupkg'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'Blauhaus Nuget'

